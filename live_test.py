"""
Live Test of the Trained Legal AI Model
Let's ask it a real legal question to see how it responds
"""
import requests
import json
import time

def test_legal_question():
    base_url = "http://localhost:5000"
    
    # Wait a bit for server to fully load
    print("🔄 Waiting for server to fully initialize...")
    time.sleep(5)
    
    print("🏛️ Testing AI Justice Bot - Live Demo")
    print("=" * 60)
    
    # Test case: A common cyber crime scenario
    legal_question = """
    Hi, I need urgent legal help. Yesterday, someone hacked into my Instagram account 
    and started posting inappropriate content and sending abusive messages to my friends 
    and family members. They also changed my password so I can't access my account. 
    This is really damaging my reputation. What legal action can I take against this person? 
    What are the applicable laws and what should be my next steps?
    """
    
    print("📝 QUESTION:")
    print(legal_question.strip())
    print("\n🤖 AI LEGAL ADVISOR RESPONSE:")
    print("-" * 60)
    
    try:
        # Health check first
        health_response = requests.get(f"{base_url}/api/health", timeout=10)
        if health_response.status_code == 200:
            health_data = health_response.json()
            print(f"✅ Model Status: {health_data.get('status')}")
            print(f"📚 Documents Loaded: {health_data.get('documents_count')}")
            print(f"🤖 Model Ready: {health_data.get('model_loaded')}")
            print()
        
        # Ask the legal question
        payload = {"message": legal_question.strip()}
        
        print("🔍 Processing your legal query...")
        response = requests.post(f"{base_url}/api/legal-advice", json=payload, timeout=30)
        
        if response.status_code == 200:
            data = response.json()
            
            print("✅ SUCCESS! Here's the legal guidance:\n")
            
            # Display the response nicely
            print("📋 LEGAL ADVICE:")
            print("=" * 40)
            print(data.get('response', 'No response received'))
            print()
            
            # Show detected issues
            if data.get('detected_issues'):
                print("🚨 DETECTED LEGAL ISSUES:")
                for issue in data.get('detected_issues', []):
                    print(f"   • {issue.title()}")
                print()
            
            # Show confidence score
            confidence = data.get('confidence', 0)
            print(f"🎯 CONFIDENCE SCORE: {confidence:.2f} ({confidence*100:.1f}%)")
            
            # Show sources
            sources = data.get('sources', [])
            if sources:
                print(f"\n📚 LEGAL SOURCES CONSULTED ({len(sources)} documents):")
                for i, source in enumerate(sources, 1):
                    print(f"\n   {i}. {source['source']}")
                    print(f"      Relevance: {source['similarity']:.2f} ({source['similarity']*100:.1f}%)")
                    print(f"      Preview: {source['text_preview'][:100]}...")
            
            print("\n" + "=" * 60)
            print("🏛️ This response was generated by your trained AI legal model")
            print("   based on real Indian legal documents including IT Act, IPC,")
            print("   Constitution, and actual court judgments.")
            print("=" * 60)
            
        else:
            print(f"❌ ERROR: HTTP {response.status_code}")
            print(response.text)
            
    except requests.exceptions.ConnectionError:
        print("❌ ERROR: Cannot connect to the API server.")
        print("Please make sure the server is running with:")
        print("python simple_legal_api.py")
        
    except requests.exceptions.Timeout:
        print("⏰ ERROR: Request timed out. The model might still be loading.")
        
    except Exception as e:
        print(f"❌ ERROR: {str(e)}")

if __name__ == "__main__":
    test_legal_question()